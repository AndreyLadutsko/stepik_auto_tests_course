# from selenium import webdriver
# from selenium.webdriver.common.by import By
# from selenium.webdriver.support.ui import WebDriverWait
# from selenium.webdriver.support import expected_conditions as EC

# driver = webdriver.Chrome()
# driver.get("https://suninjuly.github.io/explicit_wait2.html")

# # –°–ø–∏—Å–æ–∫ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –∏—Ö –ª–æ–∫–∞—Ç–æ—Ä–∞–º–∏
# elements_to_check = {
#     "price": (By.ID, "price"),
#     "book": (By.ID, "book"),
#     "input_value": (By.ID, "input_value"),
#     "answer": (By.ID, "answer"),
#     "solve": (By.ID, "solve"),
# }

# # –Ø–≤–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –ø–æ—è–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Ç–µ—á–µ–Ω–∏–µ 15 —Å–µ–∫—É–Ω–¥
# for name, locator in elements_to_check.items():
#     try:
#         element = WebDriverWait(driver, 15).until(EC.presence_of_element_located(locator))
#         print(f"–≠–ª–µ–º–µ–Ω—Ç '{name}' –Ω–∞–π–¥–µ–Ω.")
#         text = element.text.strip()
#         if text:
#             print(f" —ç–ª–µ–º–µ–Ω—Ç '{name}' —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ–∫—Å—Ç: '{text}'")
#     except Exception as e:
#         print(f"[–û–®–ò–ë–ö–ê] –≠–ª–µ–º–µ–Ω—Ç '{name}' –Ω–µ –Ω–∞–π–¥–µ–Ω: {str(e)}")

# driver.quit()



#############################################################################################


from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC

driver = webdriver.Chrome()
driver.get("https://suninjuly.github.io/explicit_wait2.html")

try:
    # –ñ–¥—ë–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ DOM
    WebDriverWait(driver, 15).until(
        lambda d: d.execute_script("return document.readyState") == "complete"
    )
    print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω–∞.")

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ DOM
    all_elements = driver.find_elements(By.XPATH, "//*")
    print(f"üîç –ù–∞–π–¥–µ–Ω–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {len(all_elements)}")

    for elem in all_elements:
        try:
            tag = elem.tag_name
            classes = elem.get_attribute("class")
            text = elem.get_attribute("textContent").strip()
            output = f"‚Äî –≠–ª–µ–º–µ–Ω—Ç: <{tag}>"
            if classes:
                output += f", class='{classes}'"
            if text:
                output += f" ‚Üí —Ç–µ–∫—Å—Ç: '{text}'"
            print(output)
        except Exception as inner_err:
            print(f"[‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —ç–ª–µ–º–µ–Ω—Ç–∞]: {str(inner_err)}")

except Exception as outer_err:
    print(f"[‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏–ª–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ DOM]: {str(outer_err)}")

driver.quit()
